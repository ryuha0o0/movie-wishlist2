name: Deploy

on:
  # Pull Request 기반 배포 프로세스 구현
  pull_request:
    branches:
      - develop  # 개발 브랜치에서 PR 발생 시 테스트 및 빌드 검증 실행
  push:
    branches:
      - master   # master 브랜치로 푸시 시 배포

  workflow_dispatch:  # 수동 실행

jobs:
  test-and-build:  # 자동화된 테스트 및 빌드 검증
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Use repository source
        uses: actions/checkout@v3

      - name: Use node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test  # 자동화된 테스트

      - name: Run performance and web standard checks
        run: |
          npm run lint   # 웹 표준 검사
          npm run audit  # 성능 검사

  deploy:
    runs-on: ubuntu-latest
    needs: test-and-build  # 테스트 및 빌드 검증 완료 후 실행
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true

    steps:
      - name: Use repository source
        uses: actions/checkout@v3

      - name: Use node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Set PUBLIC_URL
        run: |
          PUBLIC_URL=$(echo $GITHUB_REPOSITORY | sed -r 's/^.+\/(.+)$/\/\1\//')
          echo PUBLIC_URL=$PUBLIC_URL > .env

      - name: Build
        run: |
          npm run build
          cp ./build/index.html ./build/404.html

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build